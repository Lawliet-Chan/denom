const { ethers } = require("hardhat");

async function main() {
    console.log("üöÄ ÂºÄÂßãÈÉ®ÁΩ≤ÂêàÁ∫¶Âà∞ReddioÊµãËØïÁΩë...");
    
    // Ëé∑ÂèñÈÉ®ÁΩ≤Ë¥¶Êà∑
    const [deployer] = await ethers.getSigners();
    console.log("üìù ÈÉ®ÁΩ≤Ë¥¶Êà∑:", deployer.address);
    console.log("üí∞ Ë¥¶Êà∑‰ΩôÈ¢ù:", ethers.formatEther(await deployer.provider.getBalance(deployer.address)), "ETH");
    
    // ÈÉ®ÁΩ≤tAAPLÂêàÁ∫¶
    console.log("\nüì¶ ÈÉ®ÁΩ≤tAAPLÂêàÁ∫¶...");
    const tAAPL = await ethers.getContractFactory("tAAPL");
    const taapl = await tAAPL.deploy(deployer.address);
    await taapl.waitForDeployment();
    const taaplAddress = await taapl.getAddress();
    console.log("‚úÖ tAAPLÂêàÁ∫¶Â∑≤ÈÉ®ÁΩ≤Âà∞:", taaplAddress);
    
    // ÈÉ®ÁΩ≤NUSDÂêàÁ∫¶
    console.log("\nüì¶ ÈÉ®ÁΩ≤NUSDÂêàÁ∫¶...");
    const NUSD = await ethers.getContractFactory("NUSD");
    const nusd = await NUSD.deploy(deployer.address);
    await nusd.waitForDeployment();
    const nusdAddress = await nusd.getAddress();
    console.log("‚úÖ NUSDÂêàÁ∫¶Â∑≤ÈÉ®ÁΩ≤Âà∞:", nusdAddress);
    
    // ÈÉ®ÁΩ≤VaultÂêàÁ∫¶
    console.log("\nüì¶ ÈÉ®ÁΩ≤VaultÂêàÁ∫¶...");
    const Vault = await ethers.getContractFactory("Vault");
    const vault = await Vault.deploy(nusdAddress, taaplAddress, deployer.address);
    await vault.waitForDeployment();
    const vaultAddress = await vault.getAddress();
    console.log("‚úÖ VaultÂêàÁ∫¶Â∑≤ÈÉ®ÁΩ≤Âà∞:", vaultAddress);
    
    // ÈÖçÁΩÆÊùÉÈôê
    console.log("\n‚öôÔ∏è ÈÖçÁΩÆÂêàÁ∫¶ÊùÉÈôê...");
    
    // Â∞ÜVaultËÆæ‰∏∫NUSDÁöÑminter
    console.log("üîê ËÆæÁΩÆVault‰∏∫NUSDÁöÑminter...");
    const addMinterTx = await nusd.addMinter(vaultAddress);
    await addMinterTx.wait();
    console.log("‚úÖ VaultÂ∑≤ËÆæ‰∏∫NUSDÁöÑminter");
    
    // Â∞ÜVaultËÆæ‰∏∫tAAPLÁöÑminter
    console.log("üîê ËÆæÁΩÆVault‰∏∫tAAPLÁöÑminter...");
    const updateOracleTx = await taapl.updatePriceOracle(vaultAddress);
    await updateOracleTx.wait();
    console.log("‚úÖ VaultÂ∑≤ËÆæ‰∏∫tAAPLÁöÑpriceOracle");
    
    // È™åËØÅÈÉ®ÁΩ≤
    console.log("\nüîç È™åËØÅÈÉ®ÁΩ≤ÁªìÊûú...");
    
    const taaplSymbol = await taapl.symbol();
    const taaplName = await taapl.name();
    const taaplDecimals = await taapl.decimals();
    const taaplTotalSupply = await taapl.totalSupply();
    
    const nusdSymbol = await nusd.symbol();
    const nusdName = await nusd.name();
    const nusdDecimals = await nusd.decimals();
    const nusdTotalSupply = await nusd.totalSupply();
    
    console.log("üìä tAAPLÂêàÁ∫¶‰ø°ÊÅØ:");
    console.log("   Symbol:", taaplSymbol);
    console.log("   Name:", taaplName);
    console.log("   Decimals:", taaplDecimals);
    console.log("   Total Supply:", ethers.formatEther(taaplTotalSupply));
    
    console.log("\nüìä NUSDÂêàÁ∫¶‰ø°ÊÅØ:");
    console.log("   Symbol:", nusdSymbol);
    console.log("   Name:", nusdName);
    console.log("   Decimals:", nusdDecimals);
    console.log("   Total Supply:", ethers.formatEther(nusdTotalSupply));
    
    console.log("\nüìä VaultÂêàÁ∫¶‰ø°ÊÅØ:");
    console.log("   NUSDÂú∞ÂùÄ:", nusdAddress);
    console.log("   tAAPLÂú∞ÂùÄ:", taaplAddress);
    console.log("   ÊâÄÊúâËÄÖ:", deployer.address);
    
    // ‰øùÂ≠òÈÉ®ÁΩ≤‰ø°ÊÅØ
    const deploymentInfo = {
        network: "Reddio Testnet",
        chainId: 50341,
        deployer: deployer.address,
        contracts: {
            tAAPL: {
                address: taaplAddress,
                symbol: taaplSymbol,
                name: taaplName,
                decimals: taaplDecimals,
                totalSupply: ethers.formatEther(taaplTotalSupply)
            },
            NUSD: {
                address: nusdAddress,
                symbol: nusdSymbol,
                name: nusdName,
                decimals: nusdDecimals,
                totalSupply: ethers.formatEther(nusdTotalSupply)
            },
            Vault: {
                address: vaultAddress,
                nusdAddress: nusdAddress,
                taaplAddress: taaplAddress,
                owner: deployer.address
            }
        },
        timestamp: new Date().toISOString(),
        blockNumber: await deployer.provider.getBlockNumber()
    };
    
    // ÂÜôÂÖ•ÈÉ®ÁΩ≤‰ø°ÊÅØÂà∞Êñá‰ª∂
    const fs = require('fs');
    fs.writeFileSync('deployment.json', JSON.stringify(deploymentInfo, null, 2));
    console.log("\nüíæ ÈÉ®ÁΩ≤‰ø°ÊÅØÂ∑≤‰øùÂ≠òÂà∞ deployment.json");
    
    console.log("\nüéâ ÊâÄÊúâÂêàÁ∫¶ÈÉ®ÁΩ≤ÂÆåÊàêÔºÅ");
    console.log("\nüìã ÈÉ®ÁΩ≤ÊëòË¶Å:");
    console.log("   tAAPL:", taaplAddress);
    console.log("   NUSD:", nusdAddress);
    console.log("   Vault:", vaultAddress);
    
    console.log("\nüîó Âú®ReddioÊµãËØïÁΩëÊµèËßàÂô®‰∏≠Êü•Áúã:");
    console.log("   https://reddio-dev.reddio.com/");
}

main()
    .then(() => process.exit(0))
    .catch((error) => {
        console.error("‚ùå ÈÉ®ÁΩ≤Â§±Ë¥•:", error);
        process.exit(1);
    });
